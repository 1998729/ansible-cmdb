"""
Django settings for automation_ansible_api project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import logging
import django.utils.log
import logging.handlers
from celery.schedules import crontab
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jaw&5ox)=ff@2+g7d(o9g0rz6-a&awgf&_d@-_4y!(#g$1bz2f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'assets',
    'release',
    'djcelery'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
   # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'automation_ansible_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'automation_ansible_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', 
        'NAME': 'ansible', 
        'USER': 'root', 
        'PASSWORD': 'yuyang729', 
        'HOST': 'localhost', 
        'PORT': '3306', 
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

# 自定义配置项

'''
    黑名单
'''
DENY_HOSTS = [
    '1.1.1.1',
    '2.2.2.2'
]

'''
    memcached
'''
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211'
    }
}

'''
    邮箱设置
'''
EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = '15911133389@163.com' 
EMAIL_HOST_PASSWORD = 'yuyang1998729'  
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
ACCEPT_LIST = [
    '1301927919@qq.com',
    ]

'''
    日志设置
'''
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(asctime)s %(filename)s %(levelname)s  %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'assets_info': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': '%s/assets/logs/info.log' % BASE_DIR,
        },
        'assets_error': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': '%s/assets/logs/error.log' % BASE_DIR,
        },
        'release_info': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': '%s/release/logs/info.log' % BASE_DIR,
        },
        'release_error': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': '%s/release/logs/error.log' % BASE_DIR,
        }
    },
    'loggers': {
        'assets_info': {
            'handlers': ['assets_info'],
            'level': 'INFO',
            'propagate': True,
        },
        'assets_error': {
            'handlers': ['assets_error'],
            'level': 'INFO',
            'propagate': True,

        },
        'release_info': {
            'handlers': ['release_info'],
            'level': 'INFO',
            'propagate': True,
        },
        'release_error': {
            'handlers': ['release_error'],
            'level': 'ERROR',
            'propagate': True,
        }
    },
}

''' 
    redis设置:
    1: 端口号
    2: IP地址
    3: token过期时间
'''
REDIS_PORT = 6379
REDIS_ADDRESS = '127.0.0.1'
REDIS_EXPIRES = 2400

'''
    token盐加密
'''
SALT = 'automationansibledevopsisbest'

'''
发布任务token
'''
RELEASE_TOKEN = 'asdlhmnbxvclsdkasld'
'''
    探测主机存活开启的进程个数
'''
CHECK_HOST_PROCESS = 2

'''
    mongodb
    端口号，
    主机地址
    连接库
'''
MONGODB_HOST = 'localhost'
MONGODB_PORT = 27017
MONGODB_DATABASE = 'Hosts_status'

#跨域增加忽略
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    '*'
)

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
)

#任务执行进程脚本目录
PROCESS_TASK_RELEASE = '/Users/helloyuyang/Python/project/automation_ansible_api/release/utils/process_task.py'

#yml文件执行目录(生产环境一般在/etc/ansible/playbook/...)
PLAY_BOOK = '/Users/helloyuyang/Python/project/automation_ansible_api/release/utils/'

import djcelery

djcelery.setup_loader()

BROKER_URL = 'redis://127.0.0.1:6379' #队列地址

CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379' #存储结果

CELERY_TASK_SERIALIZER = 'json'

CELERY_RESULT_SERIALIZER = 'json'

CELERY_ACCEPT_CONTENT = ['json']

CELERY_IMPORTS = ('release.tasks', )

CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler' #是使用了django-celery默认的数据库调度模型,任务执行周期都被存在你指定的orm数据库中

CELERYD_CONCURRENCY = 20 #worker并发数

CELERY_TASK_RESULT_EXPIRES = 1200 #任务结果过期时间

CELERYD_PREFETCH_MULTIPLIER = 4 # celery worker 每次去redis取任务的数量

CELERYD_MAX_TASKS_PER_CHILD = 3 # 每个worker执行了多少任务就会死掉，我建议数量可以大一些，比如200

#crontab(minute='*', hour='*', day_of_week='*', day_of_month='*', month_of_year='*')
CELERY_ENABLE_UTC = False

#CELERYBEAT_SCHEDULE = {    #定时器策略
    #定时任务一：　每隔30s运行一次
  #  u'test2': {
 #      "task": "release.tasks.ansible",
        #"schedule": crontab(minute='*/2'),  # or 'schedule':   timedelta(seconds=3),
 #       "schedule":crontab(minute='*', hour='*', day_of_week='*', day_of_month='*', month_of_year='*'),
#        "args": ('touch /tmp/caonima',),
#        "kwargs":{'host':'192.168.1.21'}
 #   },
#

